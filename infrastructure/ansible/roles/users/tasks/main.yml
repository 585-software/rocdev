---
- name: create admin users
  user:
    name: "{{ item }}"
    shell: /bin/bash
    groups:
      - sudo
  with_items: "{{ admins }}"

- name: set authorized key for admins
  authorized_key:
    user: "{{ item }}"
    key: "{{ public_keys[item] }}"
  with_items: "{{ admins }}"

- name: install google authenticator
  apt:
    name: libpam-google-authenticator

- name: require google auth shared object
  lineinfile:
    path: /etc/pam.d/sshd
    line: auth required pam_google_authenticator.so nullok
    insertafter: EOF
  notify:
    - restart sshd

- name: enable challenge response
  replace:
    path: /etc/ssh/sshd_config
    regexp: ChallengeResponseAuthentication no
    replace: ChallengeResponseAuthentication yes
  notify:
    - restart sshd

- name: set authentication methods for users
  blockinfile:
    path: /etc/ssh/sshd_config
    insertafter: EOF
    block: |
      AuthenticationMethods publickey,keyboard-interactive
      Match User {{ ansible_user }}
        AuthenticationMethods publickey
  notify:
    - restart sshd

- name: disable password prompt
  replace:
    path: /etc/pam.d/sshd
    regexp: "@include common-auth"
    replace: "#"
  notify:
    - restart sshd

- name: copy authenticator config for admins
  copy:
    src: google_authenticator
    dest: "/home/{{ item }}/.google_authenticator"
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "0600"
  with_items: "{{ admins }}"

- name: enable passwordless sudo for admins
  lineinfile:
    path: "/etc/sudoers.d/{{ item }}"
    create: yes
    line: "{{ item }} ALL=(ALL) NOPASSWD:ALL"
  with_items: "{{ admins }}"
